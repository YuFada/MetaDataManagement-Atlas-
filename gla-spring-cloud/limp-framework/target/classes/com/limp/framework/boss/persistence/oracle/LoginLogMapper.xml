<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.limp.framework.boss.mapper.oracle.LoginLogMapper" >
  <resultMap id="BaseResultMap" type="com.limp.framework.boss.domain.LoginLog" >
    <result column="ID" property="id" jdbcType="VARCHAR" />
    <result column="USERID" property="userid" jdbcType="VARCHAR" />
    <result column="ACCOUNT" property="account" jdbcType="VARCHAR" />
    <result column="MAC" property="mac" jdbcType="VARCHAR" />
    <result column="IP" property="ip" jdbcType="VARCHAR" />
    <result column="IDT" property="idt" jdbcType="TIMESTAMP" />
    <result column="TYPE" property="type" jdbcType="INTEGER" />
    <result column="STATE" property="state" jdbcType="INTEGER" />
    <result column="MSG" property="msg" jdbcType="VARCHAR" />
    <result column="LOGTYPE" property="logtype" jdbcType="INTEGER" />
    <result column="RC0" property="rc0" jdbcType="VARCHAR" />
    <result column="RC1" property="rc1" jdbcType="VARCHAR" />
    <result column="RC2" property="rc2" jdbcType="VARCHAR" />
    <result column="RC3" property="rc3" jdbcType="DATE" />
    <result column="RC4" property="rc4" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, USERID, ACCOUNT, MAC, IP, IDT, TYPE, STATE, MSG, LOGTYPE, RC0, RC1, RC2, RC3, 
    RC4
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.limp.framework.boss.domain.LoginLogExample" >
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lp_login_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <delete id="deleteByExample" parameterType="com.limp.framework.boss.domain.LoginLogExample" >
    delete from lp_login_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.limp.framework.boss.domain.LoginLog" >
    insert into lp_login_log (ID, USERID, ACCOUNT, 
      MAC, IP, IDT, TYPE, 
      STATE, MSG, LOGTYPE, 
      RC0, RC1, RC2, RC3, 
      RC4)
    values (#{id,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, 
      #{mac,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{idt,jdbcType=TIMESTAMP}, #{type,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{msg,jdbcType=VARCHAR}, #{logtype,jdbcType=INTEGER}, 
      #{rc0,jdbcType=VARCHAR}, #{rc1,jdbcType=VARCHAR}, #{rc2,jdbcType=VARCHAR}, #{rc3,jdbcType=DATE}, 
      #{rc4,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.limp.framework.boss.domain.LoginLog" >
    insert into lp_login_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="userid != null" >
        USERID,
      </if>
      <if test="account != null" >
        ACCOUNT,
      </if>
      <if test="mac != null" >
        MAC,
      </if>
      <if test="ip != null" >
        IP,
      </if>
      <if test="idt != null" >
        IDT,
      </if>
      <if test="type != null" >
        TYPE,
      </if>
      <if test="state != null" >
        STATE,
      </if>
      <if test="msg != null" >
        MSG,
      </if>
      <if test="logtype != null" >
        LOGTYPE,
      </if>
      <if test="rc0 != null" >
        RC0,
      </if>
      <if test="rc1 != null" >
        RC1,
      </if>
      <if test="rc2 != null" >
        RC2,
      </if>
      <if test="rc3 != null" >
        RC3,
      </if>
      <if test="rc4 != null" >
        RC4,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="mac != null" >
        #{mac,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="idt != null" >
        #{idt,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="msg != null" >
        #{msg,jdbcType=VARCHAR},
      </if>
      <if test="logtype != null" >
        #{logtype,jdbcType=INTEGER},
      </if>
      <if test="rc0 != null" >
        #{rc0,jdbcType=VARCHAR},
      </if>
      <if test="rc1 != null" >
        #{rc1,jdbcType=VARCHAR},
      </if>
      <if test="rc2 != null" >
        #{rc2,jdbcType=VARCHAR},
      </if>
      <if test="rc3 != null" >
        #{rc3,jdbcType=DATE},
      </if>
      <if test="rc4 != null" >
        #{rc4,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.limp.framework.boss.domain.LoginLogExample" resultType="java.lang.Integer" >
    select count(*) from lp_login_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update lp_login_log
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null" >
        USERID = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null" >
        ACCOUNT = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.mac != null" >
        MAC = #{record.mac,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null" >
        IP = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.idt != null" >
        IDT = #{record.idt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null" >
        TYPE = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        STATE = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.msg != null" >
        MSG = #{record.msg,jdbcType=VARCHAR},
      </if>
      <if test="record.logtype != null" >
        LOGTYPE = #{record.logtype,jdbcType=INTEGER},
      </if>
      <if test="record.rc0 != null" >
        RC0 = #{record.rc0,jdbcType=VARCHAR},
      </if>
      <if test="record.rc1 != null" >
        RC1 = #{record.rc1,jdbcType=VARCHAR},
      </if>
      <if test="record.rc2 != null" >
        RC2 = #{record.rc2,jdbcType=VARCHAR},
      </if>
      <if test="record.rc3 != null" >
        RC3 = #{record.rc3,jdbcType=DATE},
      </if>
      <if test="record.rc4 != null" >
        RC4 = #{record.rc4,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update lp_login_log
    set ID = #{record.id,jdbcType=VARCHAR},
      USERID = #{record.userid,jdbcType=VARCHAR},
      ACCOUNT = #{record.account,jdbcType=VARCHAR},
      MAC = #{record.mac,jdbcType=VARCHAR},
      IP = #{record.ip,jdbcType=VARCHAR},
      IDT = #{record.idt,jdbcType=TIMESTAMP},
      TYPE = #{record.type,jdbcType=INTEGER},
      STATE = #{record.state,jdbcType=INTEGER},
      MSG = #{record.msg,jdbcType=VARCHAR},
      LOGTYPE = #{record.logtype,jdbcType=INTEGER},
      RC0 = #{record.rc0,jdbcType=VARCHAR},
      RC1 = #{record.rc1,jdbcType=VARCHAR},
      RC2 = #{record.rc2,jdbcType=VARCHAR},
      RC3 = #{record.rc3,jdbcType=DATE},
      RC4 = #{record.rc4,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <sql id="OracleDialectPrefix" >
    <if test="page != null" >
      select row_.* from (
    </if>
  </sql>
  <sql id="OracleDialectSuffix" >
    <if test="page != null" >
      <![CDATA[ ) row_  LIMIT  #{page.start} , #{page.rows} ]]>
    </if>
  </sql>
</mapper>